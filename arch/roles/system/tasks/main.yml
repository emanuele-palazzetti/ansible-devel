---

# Contains common plays that must be run as first task

- name: Adding multilib repository (32bit)
  replace: dest=/etc/pacman.conf regexp="{{item.regexp}}" replace="{{item.line}}"
  with_items:
    - {
        regexp: "^#\\[multilib\\]\n#Include.*",
        line: "[multilib]\nInclude = /etc/pacman.d/mirrorlist"
    }

- name: Adding Arch Linux User Repository (AUR)
  blockinfile:
    dest: /etc/pacman.conf
    marker: "# {mark} SYSTEM MANAGED BLOCK (Ansible)"
    block: |
      [archlinuxfr]
      SigLevel = Never
      Server = http://repo.archlinux.fr/$arch

- name: Update cache list
  pacman: update_cache=yes force=yes

- name: Preparing the base system
  pacman:
    state: latest
    name:
      - base
      - base-devel
      - linux
      - linux-headers

- name: Installing system packages
  pacman:
    state: latest
    name:
      - acpi
      - dosfstools
      - lib32-gcc-libs
      - lib32-ncurses
      - lib32-zlib
      - mono
      - ntfsprogs
      - ntp
      - powertop
      - sudo
      - tree
      - tree
      - wicd
      - yaourt
      - zsh

- name: Installing support tools
  pacman:
    state: latest
    name:
      - alsa-utils
      - archey3
      - blueman
      - bluez
      - curl
      - dnsutils
      - fzf
      - htop
      - mlocate
      - openssh
      - p7zip
      - pulseaudio-bluetooth
      - tar
      - unrar
      - unzip
      - wget
      - whois
      - zip

- name: Installing video drivers
  pacman:
    state: latest
    name:
      - xf86-video-intel
      - xf86-video-fbdev
      - xf86-video-vesa
      - xf86-input-synaptics

- name: Installing X
  pacman:
    state: latest
    name:
      - xorg-server
      - xorg-server-utils
      - xorg-xinit
      - xorg-apps
      - mesa

- name: Providing synaptics configuration
  copy: src=50-synaptics.conf dest=/etc/X11/xorg.conf.d/ owner=root group=root

- name: Starting NTP daemon at boot time
  command: systemctl enable ntpd

- name: Starting NTP daemon now
  command: systemctl start ntpd

- name: Adding default user
  user: name={{username}} groups=wheel append=yes

- name: Creating a default SSH key
  user: name={{username}} generate_ssh_key=yes ssh_key_bits=4096 ssh_key_file=.ssh/id_rsa

- name: Creating 'programs' folder
  file: path="/home/{{username}}/programs" owner={{username}} group={{username}} state=directory

- name: Creating 'workspaces' folder
  file: path="/home/{{username}}/workspaces" owner={{username}} group={{username}} state=directory

- name: Adding 'wheel' group to sudoers
  lineinfile: "dest=/etc/sudoers state=present regexp='^%wheel' line='%wheel ALL=(ALL) ALL'"
